<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="max-w-2xl mx-auto py-8 px-4">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Todo List</h1>
            <p class="text-gray-600">Stay organized and productive</p>
        </div>

        <!-- Add Todo Form -->
        <div class="bg-white rounded-lg shadow-sm border p-6 mb-6">
            <form class="space-y-4" action="/create" method="post">
                <div class="flex gap-4">
                    <input 
                        type="text" 
                        placeholder="Add a new todo..." 
                        class="flex-1 px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        required
                        name="todo"
                    >
                    <input 
                        name="due"
                        type="datetime-local" 
                        class="px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    >
                </div>
                <input 
                    type="submit" 
                    value=" Add Todo"
                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200"
                />
            </form>
        </div>

        <!-- Todo List -->
        <div class="space-y-3">
            <% if(todos && todos.length > 0) { %>
                <% todos.reverse().forEach(todo => { %>
                    <div class="bg-white rounded-lg shadow-sm border p-4 hover:shadow-md transition-shadow duration-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3 flex-1">
                                <input type="checkbox" class="w-5 h-5 text-blue-600 rounded focus:ring-blue-500" 
                                    <%= todo.completed ? 'checked' : '' %> 
                                        onchange="toggleTodo('<%= todo._id %>', this.checked)">
                                <div class="flex-1">
                                    <p class="<%= todo.completed ? 'text-gray-500 line-through' : 'text-gray-800' %> font-medium">
                                        <%= todo.todo %>
                                    </p>
                                    <p class="text-sm <%= todo.completed ? 'text-gray-400' : 'text-gray-500' %> mt-1">
                                        <%= todo.completed ? 'Completed' : 'Due: ' + new Date(todo.due).toLocaleString("en-GB", { timeZone: "UTC" }) %>
                                    </p>
                                </div>
                            </div>
                            <div class="flex space-x-2">
                                <a href="/update/<%= todo._id %>" class="p-2 text-gray-500 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                    </svg>
                                </a>
                                <button onclick="deleteTodo('<%= todo._id %>')" class="p-2 text-gray-500 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <!-- Empty State -->
                <div class="text-center py-12">
                    <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                    <p class="text-gray-500 text-lg">No todos yet</p>
                    <p class="text-gray-400">Add your first todo to get started</p>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        async function toggleTodo(todoId, isChecked) {
            try {
                await fetch(`/toggle/${todoId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ completed: isChecked })
                });
                location.reload();
            } catch (error) {
                console.error('Error:', error);
            }
        }
        async function deleteTodo(todoId) {
            const toDelete = confirm("Do you want to DELETE the todo?")
            if(toDelete){
                try{
                await fetch(`/delete/${todoId}`,{
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });
                location.reload();
            }
            catch(error){
                console.error('Error:', error);
            }
            }
        }
    </script>
</body>
</html>